version: '3'
services:
  db:
    container_name: db
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - '5432:5432'
    networks:
      - app-network

  meilisearch:
    container_name: meilisearch
    hostname: meilisearch
    image: getmeili/meilisearch:latest
    ports:
      - 7700:7700
    networks:
      - app-network

  strapi:
    build: .
    container_name: strapi
    hostname: strapi
    command: "yarn start"
    depends_on:
      - db
      - meilisearch
    env_file:
      - .env
    environment:
    - DATABASE_USERNAME=${DATABASE_USERNAME}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    - DATABASE_NAME=${DATABASE_NAME}
    ports:
      - '1337:1337'
    networks:
      - app-network

  certbot:
    build: ./certbot
    image: evgeniy-khyst/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
    networks:
      - app-network

  cron:
    build: ./cron
    image: evgeniy-khyst/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    container_name: nginx
    hostname: nginx
    build: ./nginx
    image: evgeniy-khyst/nginx
    depends_on:
      - strapi
      - meilisearch
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./vhosts:/etc/nginx/vhosts
      # - ./nginx/ssl:/etc/ssl/private
    restart: unless-stopped
    networks:
      - app-network

volumes:
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:

networks:
  app-network:
    driver: bridge
